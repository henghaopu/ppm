name: CI/CD

on:
  push:
    branches: ['main']
  workflow_dispatch:

env:
  NODE_VERSION: '18.x'

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo with default repo setup
        uses: actions/checkout@v3

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install npm packages
        run: npm ci

      - name: Check types by running TypeScript complier
        run: npm run check-types

      - name: Check code format by running Prettier
        run: npm run check-format

      - name: Catch logical mistakes by running ESLint
        run: npm run lint

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo with default repo setup
        uses: actions/checkout@v3

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install npm packages
        run: npm ci

      - name: Run tests using jest-junit reporter
        run: npm run test-report

      - name: Publish test report
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Test Report
          path: report/*.xml
          reporter: jest-junit

  build:
    runs-on: ubuntu-latest
    needs: [validate, test]
    steps:
      - name: Checkout repo with default repo setup
        uses: actions/checkout@v3

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install npm packages
        run: npm ci

      - name: Create a production build directory
        run: npm run build

      - name: Upload production build files as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-artifact-${{ github.run_number }}
          path: ./build

  deploy:
    runs-on: ubuntu-latest
    needs: build
    # todo: extract repo name from github.repository
    # environment:
    #   name: dev
    #   url: https://${{ github.actor }}.github.io/${{ github.repository }}

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: build-artifact-${{ github.run_number }}
          path: ./build

      - name: Deploy to GitHub
        uses: peaceiris/actions-gh-pages@v3
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          github_token: ${{ secrets.ACTIONS_DEPLOY_ACCESS_TOKEN }}
          publish_dir: ./build
